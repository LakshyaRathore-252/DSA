class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int>ans;
        int m = matrix.size();
        int n = matrix[0].size();
        int total_elements = m*n;

        int startingRow = 0 ;
        int endingCol = n - 1 ;
        int endingRow = m - 1;
        int startingCol = 0;
        int count = 0 ;
        
        while(count < total_elements)
        {
            // Printng Starting Row
            for(int i=startingCol;count<total_elements && i<=endingCol; i++)
            {
                ans.push_back(matrix[startingRow][i]);
                count++;
            }
            startingRow++;

            // Printing the ending column
             for(int i=startingRow;count<total_elements && i<=endingRow; i++)
            {
                ans.push_back(matrix[i][endingCol]);
                count++;
            }
            endingCol--;

    
            // Printing Last Row
             for(int i=endingCol;count<total_elements && i>=startingCol; i--)
            {
                ans.push_back(matrix[endingRow][i]);
                count++;
            }
            endingRow--;
            


            // Printing the Starting Column
          for(int i=endingRow;count<total_elements && i>=startingRow; i--)
            {
                ans.push_back(matrix[i][startingCol]);
                count++;
            }
            startingCol++;
        }
        return ans;

    }
};
