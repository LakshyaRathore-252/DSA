class Solution {
public:
    bool isVowel(char c) {
        c = tolower(c);
        return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u';
    }
    string reverseVowels(string s) {
        int l=0, r=s.size()-1;
        while(l<r){
            while (l < r && !isVowel(s[l])) l++;
            while (r > l && !isVowel(s[r])) r--;
            swap(s[l], s[r]);
            l++, r--;
        }
        return s;
    }
};



//Methode 2

class Solution {
public:

    bool isVowel(char ch)
    {
       ch = tolower(ch);
       return ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u';
    }

    string reverseVowels(string s) {
        int l = 0 , h =s.size()-1 ;

        while(l < h)
        {
            if(isVowel(s[l]) && isVowel(s[h]))
            {
                swap(s[l] , s[h]);
                l++;
                h--;
            }

            else if (isVowel(s[l]) == 0)
            {
                l++;
            }

            else{
                h--;
            }
        }
        return s;

    }
};


//Time-Complexity:O(N)
//Space-Complexity:O(1)
