
// ======================================================================= Stack =====================================================================================
class Solution {
public:
    int longestValidParentheses(string S) {
         stack<int>st;
        st.push(-1);
        int maxLen = 0 ;
        
        for(int i = 0 ; i < S.length() ; i++ )
        {
            if(S[i] == '(')
            {
                st.push(i);
            }
            
            else
            {
                st.pop();
                
                if(st.empty())
                {
                    st.push(i);
                }
                
                else 
                {
                    int len = i - st.top();
                    maxLen = max(len , maxLen);
                }
            }
        }
        return maxLen;
    }
};


//Time Complexity : O(N)
// Space Complexity :O(N)



